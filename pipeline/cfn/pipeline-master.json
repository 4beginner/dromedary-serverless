{
  "AWSTemplateFormatVersion":"2010-09-09",
  "Description":"Master dromedary stack that calls nested stacks",
  "Parameters":{
    "TemplateBucketName":{
      "Type":"String",
      "Description":"S3 bucket name for all the CloudFormation templates used in the pipeline."
    },
    "GitHubToken":{
      "NoEcho":"true",
      "Type":"String",
      "Description":"Secret. It might look something like 9b189a1654643522561f7b3ebd44a1531a4287af OAuthToken with access to Repo. Go to https://github.com/settings/tokens"
    },
    "GitHubUser":{
      "Type":"String",
      "Description":"GitHub UserName",
      "Default":"stelligent"
    },
    "GitHubRepo":{
      "Type":"String",
      "Description":"GitHub Repo to pull from. Only the Name. not the URL",
      "Default":"dromedary"
    },
    "GitHubBranch":{
      "Type":"String",
      "Description":"Branch to use from Repo. Only the Name. not the URL",
      "Default":"master"
    }
  },
  "Mappings" : {
    "EndpointMap" : {
      "us-east-1": {
        "s3": "https://s3.amazonaws.com"
      },
      "us-west-2": {
        "s3": "https://s3-us-west-2.amazonaws.com"
      },
      "eu-west-1": {
        "s3": "https://s3-eu-west-1.amazonaws.com"
      },
      "ap-northeast-1": {
        "s3": "https://s3-ap-northeast-1.amazonaws.com"
      }
    }
  },
  "Resources": {
    "CodePipelineRole":{
      "Type":"AWS::IAM::Role",
      "Properties":{
        "AssumeRolePolicyDocument":{
          "Statement":[
            {
              "Sid":"1",
              "Effect":"Allow",
              "Principal":{
                "Service":[
                  "codepipeline.amazonaws.com"
                ]
              },
              "Action":"sts:AssumeRole"
            }
          ]
        },
        "Path":"/",
        "Policies":[
          {
            "PolicyName":"CodePipelinePolicy",
            "PolicyDocument":{
              "Version":"2012-10-17",
              "Statement":[
                {
                  "Action":[
                    "s3:GetObject",
                    "s3:GetObjectVersion",
                    "s3:GetBucketVersioning"
                  ],
                  "Resource":"*",
                  "Effect":"Allow"
                },
                {
                  "Action":[
                    "s3:PutObject"
                  ],
                  "Resource":[
                    "arn:aws:s3:::codepipeline*",
                    "arn:aws:s3:::dromedary*",
                    "arn:aws:s3:::elasticbeanstalk*"
                  ],
                  "Effect":"Allow"
                },
                {
                  "Action":[
                    "codedeploy:CreateDeployment",
                    "codedeploy:GetApplicationRevision",
                    "codedeploy:GetDeployment",
                    "codedeploy:GetDeploymentConfig",
                    "codedeploy:RegisterApplicationRevision"
                  ],
                  "Resource":"*",
                  "Effect":"Allow"
                },
                {
                  "Action":[
                    "elasticbeanstalk:*",
                    "ec2:*",
                    "elasticloadbalancing:*",
                    "autoscaling:*",
                    "cloudwatch:*",
                    "s3:*",
                    "sns:*",
                    "cloudformation:*",
                    "rds:*",
                    "sqs:*",
                    "ecs:*",
                    "iam:PassRole"
                  ],
                  "Resource":"*",
                  "Effect":"Allow"
                },
                {
                  "Action":[
                    "lambda:InvokeFunction",
                    "lambda:ListFunctions"
                  ],
                  "Resource":"*",
                  "Effect":"Allow"
                }
              ]
            }
          }
        ]
      }
    },
    "CodePipelineLambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "LambdaPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:*"
                  ],
                  "Resource": [
                    "arn:aws:logs:*:*:*"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "codepipeline:GetJobDetails",
                    "codepipeline:PutJobSuccessResult",
                    "codepipeline:PutJobFailureResult"
                  ],
                  "Resource": [
                    "*"
                  ]
                },
                {
                  "Action":[
                    "s3:*",
                    "lambda:*",
                    "cloudformation:*",
                    "iam:PassRole"
                  ],
                  "Resource":"*",
                  "Effect":"Allow"
                }
              ]
            }
          }
        ]
      }
    },
    "CodePipelineLambda":{
      "Type":"AWS::Lambda::Function",
      "DependsOn":[
        "CodePipelineLambdaRole"
      ],
      "Properties":{
        "Code" : {
          "S3Bucket":{ "Ref": "TemplateBucketName" },
          "S3Key": "codepipeline-gulp.zip"
        },
        "Role":{ "Fn::GetAtt":[ "CodePipelineLambdaRole", "Arn" ] },
        "Description":"Run gulp tasks for pipeline",
        "Timeout":300,
        "Handler":"index.handler",
        "Runtime":"nodejs",
        "MemorySize":512
      }
    },
    "ArtifactBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
      }
    },
    "DromedaryPipeline": {
      "Type": "AWS::CodePipeline::Pipeline",
      "DependsOn": [
        "CodePipelineRole",
        "CodePipelineLambda"
      ],
      "Properties": {
        "DisableInboundStageTransitions": [ ],
        "RoleArn": { "Fn::GetAtt": [ "CodePipelineRole", "Arn" ] },
        "Stages": [
          {
            "Name": "Source",
            "Actions": [
              {
                "InputArtifacts": [],
                "Name": "Source",
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Version": "1",
                  "Provider": "GitHub"
                },
                "Configuration": {
                  "Owner": {
                    "Ref": "GitHubUser"
                  },
                  "Repo": {
                    "Ref": "GitHubRepo"
                  },
                  "Branch": {
                    "Ref": "GitHubBranch"
                  },
                  "OAuthToken": {
                    "Ref": "GitHubToken"
                  }
                },
                "OutputArtifacts": [
                  {
                    "Name": "SourceOutput"
                  }
                ],
                "RunOrder": 1
              }
            ]
          },
          {
            "Name": "Commit",
            "Actions": [
              {
                "InputArtifacts":[
                  {
                    "Name": "SourceOutput"
                  }
                ],
                "Name":"StaticAnalysis",
                "ActionTypeId":{
                  "Category":"Invoke",
                  "Owner":"AWS",
                  "Version":"1",
                  "Provider":"Lambda"
                },
                "Configuration":{
                  "FunctionName":{
                    "Ref":"CodePipelineLambda"
                  },
                  "UserParameters":"app:staticAnalysis"
                },
                "OutputArtifacts": [
                ],
                "RunOrder":1
              },
              {
                "InputArtifacts":[
                  {
                    "Name": "SourceOutput"
                  }
                ],
                "Name":"UnitTest",
                "ActionTypeId":{
                  "Category":"Invoke",
                  "Owner":"AWS",
                  "Version":"1",
                  "Provider":"Lambda"
                },
                "Configuration":{
                  "FunctionName":{
                    "Ref":"CodePipelineLambda"
                  },
                  "UserParameters":"app:unitTest"
                },
                "OutputArtifacts": [
                ],
                "RunOrder": 1
              },
              {
                "InputArtifacts":[
                  {
                    "Name": "SourceOutput"
                  }
                ],
                "Name":"Package",
                "ActionTypeId":{
                  "Category":"Invoke",
                  "Owner":"AWS",
                  "Version":"1",
                  "Provider":"Lambda"
                },
                "Configuration":{
                  "FunctionName":{
                    "Ref":"CodePipelineLambda"
                  },
                  "UserParameters":"app:zip"
                },
                "OutputArtifacts": [
                ],
                "RunOrder": 2
              }
            ]
          },
          {
            "Name": "Acceptance",
            "Actions": [
              {
                "InputArtifacts":[
                  {
                    "Name": "SourceOutput"
                  }
                ],
                "Name":"Launch",
                "ActionTypeId":{
                  "Category":"Invoke",
                  "Owner":"AWS",
                  "Version":"1",
                  "Provider":"Lambda"
                },
                "Configuration":{
                  "FunctionName":{
                    "Ref":"CodePipelineLambda"
                  },
                  "UserParameters":"cfn:up"
                },
                "OutputArtifacts": [
                ],
                "RunOrder": 1
              },
              {
                "InputArtifacts":[
                  {
                    "Name": "SourceOutput"
                  }
                ],
                "Name":"UploadLambda",
                "ActionTypeId":{
                  "Category":"Invoke",
                  "Owner":"AWS",
                  "Version":"1",
                  "Provider":"Lambda"
                },
                "Configuration":{
                  "FunctionName":{
                    "Ref":"CodePipelineLambda"
                  },
                  "UserParameters":"app:uploadLambda"
                },
                "OutputArtifacts": [
                ],
                "RunOrder": 2
              },
              {
                "InputArtifacts":[
                  {
                    "Name": "SourceOutput"
                  }
                ],
                "Name":"UploadSite",
                "ActionTypeId":{
                  "Category":"Invoke",
                  "Owner":"AWS",
                  "Version":"1",
                  "Provider":"Lambda"
                },
                "Configuration":{
                  "FunctionName":{
                    "Ref":"CodePipelineLambda"
                  },
                  "UserParameters":"app:uploadSite"
                },
                "OutputArtifacts": [
                ],
                "RunOrder": 2
              },
              {
                "InputArtifacts":[
                  {
                    "Name": "SourceOutput"
                  }
                ],
                "Name":"UploadConfig",
                "ActionTypeId":{
                  "Category":"Invoke",
                  "Owner":"AWS",
                  "Version":"1",
                  "Provider":"Lambda"
                },
                "Configuration":{
                  "FunctionName":{
                    "Ref":"CodePipelineLambda"
                  },
                  "UserParameters":"app:uploadConfig"
                },
                "OutputArtifacts": [
                ],
                "RunOrder": 2
              },
              {
                "InputArtifacts":[
                  {
                    "Name": "SourceOutput"
                  }
                ],
                "Name":"FunctionalTest",
                "ActionTypeId":{
                  "Category":"Invoke",
                  "Owner":"AWS",
                  "Version":"1",
                  "Provider":"Lambda"
                },
                "Configuration":{
                  "FunctionName":{
                    "Ref":"CodePipelineLambda"
                  },
                  "UserParameters":"app:testFunctional"
                },
                "OutputArtifacts": [
                ],
                "RunOrder": 3
              }
            ]
          },
          {
            "Name": "Production",
            "Actions": [
              {
                "InputArtifacts":[
                  {
                    "Name": "SourceOutput"
                  }
                ],
                "Name":"SwitchDNS",
                "ActionTypeId":{
                  "Category":"Invoke",
                  "Owner":"AWS",
                  "Version":"1",
                  "Provider":"Lambda"
                },
                "Configuration":{
                  "FunctionName":{
                    "Ref":"CodePipelineLambda"
                  },
                  "UserParameters":"cfn:updateDNS"
                },
                "OutputArtifacts": [
                ],
                "RunOrder": 1
              }
            ]
          }
        ],
        "ArtifactStore": {
          "Type": "S3",
          "Location": { "Ref": "ArtifactBucket" }
        }
      }
    }
  },
  "Outputs":{
    "StackName": {
      "Value": { "Ref": "AWS::StackName" }
    },
    "CodePipelineLambdaArn" : {
      "Value" : { "Fn::GetAtt" : [ "CodePipelineLambda", "Arn" ] },
      "Description" : "Lambda Arn"
    },
    "ArtifactBucket": {
      "Value": { "Ref": "ArtifactBucket" }
    }
  }
}